// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       String    @id @default(cuid())
  name     String
  products Product[]
}




model Product {
  id           String        @id @default(cuid())
  name         String
  category     Category      @relation(fields: [categoryId], references: [id])
  categoryId   String
  price        Int
  description  String
  quantity     Int
  isDelete     Boolean @default(false)
  images       ProductImg[]
  orderDetails OrderDetail[]
}

model ProductImg {
  id        String  @id @default(cuid())
  url       String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model User {
  id           String        @id @default(cuid())
  username     String
  email        String        @unique
  password     String
  refreshToken RefreshToken?
  userRole     UserRole[]
  orders       Order[]
  profile          Profile?
  @@map(name: "users")
}

model RefreshToken {
  id       String @id @default(cuid())
  username String
  email    String @unique
  password String
  user     User   @relation(fields: [userId], references: [id])
  userId   String @unique
}

model Role {
  id       String     @id @default(cuid())
  name     String     @unique
  userRole UserRole[]
}

model UserRole {
  id     String @id @default(cuid())
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Order {
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])    
  dateOrder  DateTime  
  userId       String       
  totalPrice   Int
  status       OrderStatus    @default(IN_PROGRESS)
  transactionId String?
  orderDetails OrderDetail[]
}

model OrderDetail {
  id        String  @id @default(cuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String  
  price     Int
  quantity  Int
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Profile{
  id        String  @id @default(cuid())
  user        User    @relation(fields: [userId], references: [id])
  userId      String  @unique
  fullName    String?
  address     String?
  phoneNumber String?
  url         String?
  description String?
}

enum OrderStatus {
  IN_PROGRESS
  DONE
  PAID
} 