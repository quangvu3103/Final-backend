// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Category{
  id    String @default(cuid()) @id
  name  String
  pets   Pet[]
}

model PetAccessories{
  id String @default(cuid()) @id
  name String
  quantity Int
  image String
  title String
  describe String
  brands Brand @relation(fields: [brandId], references: [id])
  brandId String
}

model Brand{
  id String @default(cuid()) @id
  name String @unique
  PetAccessories PetAccessories[] 
}

model Pet {
  id         String @default(cuid()) @id
  name       String
  category   Category   @relation(fields: [categoryId], references: [id])
  categoryId  String
  orderDetails OrderDetail[]
}

model User{
  id         String @default(cuid()) @id
  username       String
  email String  @unique
  password String 
  address String
  phone String
  refreshToken RefreshToken?
  userRole UserRole[]
  orders Order[]

  @@map(name:"users")
}


model RefreshToken {
  id         String @default(cuid()) @id
  username       String
  email String @unique
  password String 
  user   User   @relation(fields: [userId], references: [id])
  userId  String  @unique
}

model Role{
  id         String @default(cuid()) @id
  name       String @unique
  userRole    UserRole[]
}

model UserRole{
  id String @default(cuid()) @id
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String
  user   User   @relation(fields: [userId], references: [id])
  userId  String  @unique
}

model Order{
  id String @default(cuid()) @id
  user User @relation(fields: [userId], references: [id])
  userId String  @unique
  totalPrice Int
  orderDetails OrderDetail[]
}

model OrderDetail{
  id String @default(cuid()) @id
  order Order @relation(fields: [orderId], references: [id])
  orderId String  @unique
  price Int
  quantity Int
  carId String
  pet Pet @relation(fields: [carId], references: [id])
}





